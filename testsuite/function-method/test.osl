void unshadowed(int i) { printf("unshadowed %d\n", i); }
void unshadowed() { printf("unshadowed *\n"); }

struct emethod {
    float f;

    color test(int i) {
        printf("emethod::test: (%g) (%d)\n", this.f, i);
        return color(4,5,6);
    }
    float test2(int i) {
        color c = this.test((int)(f + i*2));
        return c[0];
    }

    emethod testchain(float f) {
        this.f -= f;
        printf("emethod::testchain: %g\n", this.f);
        return this;
    }

    void shadowed(float f) {
        printf("emethod::shadowed: (%g) (%g)\n", this.f, f);
    }

    float shadowed2(float ff) {
        float f = 32.4;
        f -= 10;
        printf("emethod::shadowed2: %g %g %g\n", this.f, f, ff);
        shadowed(ff);
        unshadowed(5);
        unshadowed();
        return f;
    }
};


shader test ()
{
    emethod e = { 42 };
    e.test(2);
    e.test2(2);
    emethod(2+4+8+16).testchain(2).testchain(4).testchain(8).testchain(16);
    e.f -= 2;
    e.shadowed(3.14);
    e.shadowed2(6.28);
}

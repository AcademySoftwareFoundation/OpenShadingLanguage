Compiled test.osl -> test.oso
Test basic array initialization and referencing:
iarray = [10 11 12]
farray = [10.5 11.5 12]
carray = [(0.1 0.2 0.3) (0.2 0.2 0.2) (0.3 0.3 0.3)]
marray = [(1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1) (2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2) (3 0 0 0 0 3 0 0 0 0 3 0 0 0 0 3)]
sarray = ["Able" "Baker" "Charlie"]
arraylength(carray) = 3
parameter cparamarray = [(0 1 2) (3 4 5)]

Test array element assignment:
After 'farray[1] = 14; farray[2] = 15.5;'...
  farray = [10.5 14 15.5]
carray[1][2] = 0.2
after 'carray[1][2] = 3.1', carray[1][2] = 3.1
carray = [(0.1 0.2 0.3) (0.2 0.2 3.1) (0.3 0.3 0.3)]
marray[2][1][1] = 3, marray[2][1][2] = 0
after 'marray[2][1][3] = 100',
marray[2] = (3 0 0 0 0 3 0 100 0 0 3 0 0 0 0 3)

Test varying array assignment and reference:
After carray[2] = color(u,v,4)...
carray = [(0.1 0.2 0.3) (0.2 0.2 3.1) (0 0 4)]
Verify compile of functions with array parameters of unspecified length:
	length of s is 3
Test message passing an array: imess = [10 11 12]

Test array of closures:
C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)
pca  C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
pca  C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
pca  C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)
Testing message passing of array of closures:
pca  C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
pca  C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
pca  C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)


Test basic array initialization and referencing:
iarray = [10 11 12]
farray = [10.5 11.5 12]
carray = [(0.1 0.2 0.3) (0.2 0.2 0.2) (0.3 0.3 0.3)]
marray = [(1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1) (2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2) (3 0 0 0 0 3 0 0 0 0 3 0 0 0 0 3)]
sarray = ["Able" "Baker" "Charlie"]
arraylength(carray) = 3
parameter cparamarray = [(0 1 2) (3 4 5)]

Test array element assignment:
After 'farray[1] = 14; farray[2] = 15.5;'...
  farray = [10.5 14 15.5]
carray[1][2] = 0.2
after 'carray[1][2] = 3.1', carray[1][2] = 3.1
carray = [(0.1 0.2 0.3) (0.2 0.2 3.1) (0.3 0.3 0.3)]
marray[2][1][1] = 3, marray[2][1][2] = 0
after 'marray[2][1][3] = 100',
marray[2] = (3 0 0 0 0 3 0 100 0 0 3 0 0 0 0 3)

Test varying array assignment and reference:
After carray[2] = color(u,v,4)...
carray = [(0.1 0.2 0.3) (0.2 0.2 3.1) (1 0 4)]
Verify compile of functions with array parameters of unspecified length:
	length of s is 3
Test message passing an array: imess = [10 11 12]

Test array of closures:
C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)
pca  C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
pca  C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
pca  C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)
Testing message passing of array of closures:
pca  C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
pca  C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
pca  C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)


Test basic array initialization and referencing:
iarray = [10 11 12]
farray = [10.5 11.5 12]
carray = [(0.1 0.2 0.3) (0.2 0.2 0.2) (0.3 0.3 0.3)]
marray = [(1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1) (2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2) (3 0 0 0 0 3 0 0 0 0 3 0 0 0 0 3)]
sarray = ["Able" "Baker" "Charlie"]
arraylength(carray) = 3
parameter cparamarray = [(0 1 2) (3 4 5)]

Test array element assignment:
After 'farray[1] = 14; farray[2] = 15.5;'...
  farray = [10.5 14 15.5]
carray[1][2] = 0.2
after 'carray[1][2] = 3.1', carray[1][2] = 3.1
carray = [(0.1 0.2 0.3) (0.2 0.2 3.1) (0.3 0.3 0.3)]
marray[2][1][1] = 3, marray[2][1][2] = 0
after 'marray[2][1][3] = 100',
marray[2] = (3 0 0 0 0 3 0 100 0 0 3 0 0 0 0 3)

Test varying array assignment and reference:
After carray[2] = color(u,v,4)...
carray = [(0.1 0.2 0.3) (0.2 0.2 3.1) (0 1 4)]
Verify compile of functions with array parameters of unspecified length:
	length of s is 3
Test message passing an array: imess = [10 11 12]

Test array of closures:
C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)
pca  C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
pca  C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
pca  C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)
Testing message passing of array of closures:
pca  C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
pca  C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
pca  C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)


Test basic array initialization and referencing:
iarray = [10 11 12]
farray = [10.5 11.5 12]
carray = [(0.1 0.2 0.3) (0.2 0.2 0.2) (0.3 0.3 0.3)]
marray = [(1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1) (2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2) (3 0 0 0 0 3 0 0 0 0 3 0 0 0 0 3)]
sarray = ["Able" "Baker" "Charlie"]
arraylength(carray) = 3
parameter cparamarray = [(0 1 2) (3 4 5)]

Test array element assignment:
After 'farray[1] = 14; farray[2] = 15.5;'...
  farray = [10.5 14 15.5]
carray[1][2] = 0.2
after 'carray[1][2] = 3.1', carray[1][2] = 3.1
carray = [(0.1 0.2 0.3) (0.2 0.2 3.1) (0.3 0.3 0.3)]
marray[2][1][1] = 3, marray[2][1][2] = 0
after 'marray[2][1][3] = 100',
marray[2] = (3 0 0 0 0 3 0 100 0 0 3 0 0 0 0 3)

Test varying array assignment and reference:
After carray[2] = color(u,v,4)...
carray = [(0.1 0.2 0.3) (0.2 0.2 3.1) (1 1 4)]
Verify compile of functions with array parameters of unspecified length:
	length of s is 3
Test message passing an array: imess = [10 11 12]

Test array of closures:
C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)
pca  C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
pca  C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
pca  C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)
Testing message passing of array of closures:
pca  C[0] = (1, 1, 1) * diffuse ((0, 0, 1))
pca  C[1] = (0.5, 0.5, 0.5) * reflection ((0, 0, 1), 0)
pca  C[2] = (0.25, 0.25, 0.25) * refraction ((0, 0, 1), 1.5)




/////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2009-2010 Sony Pictures Imageworks Inc., et al.
// All Rights Reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
// * Redistributions of source code must retain the above copyright
//   notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer in the
//   documentation and/or other materials provided with the distribution.
// * Neither the name of Sony Pictures Imageworks nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
/////////////////////////////////////////////////////////////////////////////


shader
checkerboard
    [[ string description = "Procedural checkerboard" ]]
(
    float s = u
        [[  string description = "s coordinate for the lookup",
            float UImin = 0, float UIsoftmax = 1 ]],
    float t = v
        [[  string description = "t coordinate for the lookup",
            float UImin = 0, float UIsoftmax = 1 ]],
    float scale_s = 4
        [[  string description = "scale factor for s coordinate" ]],
    float scale_t = 4
        [[  string description = "scale factor for t coordinate" ]],
    color Ca = color(1, 1, 1)
        [[  string description = "color of even squares" ]],
    color Cb = color(0, 0, 0)
        [[  string description = "color of odd squares" ]],
    output color Cout = 0
        [[  string description = "Output color",
            float UImin = 0, float UImax = 1 ]]
  )
{
// TODO: anti-alias
    float cs = fmod(s * scale_s, 2);
    float ct = fmod(t * scale_t, 2);
    if ((int(cs) ^ int(ct)) == 0)
       Cout = Ca;
    else
       Cout = Cb;
}

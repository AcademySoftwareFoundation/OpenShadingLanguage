void test_ctransform (string space, color c)
{
    color cs = transformc (space, c);
    printf ("rgb %0.3f = %s %0.3f\n", c, space, cs);
    color crgb = transformc (space, "rgb", cs);
    printf ("%s %0.3f = rgb %0.3f\n", space, cs, crgb);
    printf ("    residual = %0.3f\n", abs(crgb - c));
}



surface test ()
{
    color c = color (0.5, 1, 0);
    color uv = color (u, v, 0.5);
    test_ctransform ("hsv", c);
    test_ctransform ("hsv", uv);
    test_ctransform ("hsl", c);
    test_ctransform ("hsl", uv);
    test_ctransform ("YIQ", c);
    test_ctransform ("YIQ", uv);
    test_ctransform ("XYZ", c);
    test_ctransform ("XYZ", uv);

    printf ("transformc (\"linear\",\"sRGB\",(%0.3f)) = %0.3f\n",
            c, transformc("linear","sRGB",c));
    printf ("transformc (\"sRGB\",\"linear\",(%0.3f)) = %0.3f\n",
            c, transformc("sRGB","linear",c));

    color uv_YIQ = transformc("rgb","YIQ",uv);
    printf ("transformc (\"rgb\",\"YIQ\",(%0.3f / %0.3f / %0.3f)) = %0.3f / %0.3f / %0.3f\n",
            uv, Dx(uv), Dy(uv), uv_YIQ, Dx(uv_YIQ), Dy(uv_YIQ));
    color uv_sRGB = transformc("rgb","sRGB",uv);
    printf ("transformc (\"rgb\",\"sRGB\",(%0.3f / %0.3f / %0.3f)) = %0.3f / %0.3f / %0.3f\n",
            uv, Dx(uv), Dy(uv), uv_sRGB, Dx(uv_sRGB), Dy(uv_sRGB));
    printf ("\n");
}


# .travis.yml for OSL

language: cpp
sudo: false
osx_image: xcode7.3
dist: trusty


# Add-ons: specify apt packages for Linux
addons:
  apt:
   sources:
      - boost-latest
      - ubuntu-toolchain-r-test
      - george-edison55-precise-backports
   packages:
      - cmake
      - cmake-data
      - gcc-4.8
      - g++-4.8
      - gcc-6
      - g++-6
      - libboost1.55-all-dev
      - llvm-3.4-dev
      - clang-3.4

cache:
    ccache: true
    apt: true
    directories:
      - $HOME/.ccache

before_install:
    - if [ "$WHICHGCC" == "" ]; then export WHICHGCC="4.8" ; fi
    - if [ $TRAVIS_OS_NAME == osx ] ; then
          export PLATFORM=macosx ;
          sysctl machdep.cpu.features ;
      elif [ $TRAVIS_OS_NAME == linux ] ; then
          export PLATFORM=linux64 ;
          cat /proc/cpuinfo | head -26 ;
      fi
    - export OIIOPLATFORM=$PLATFORM
    - if [ "$DEBUG" == 1 ] ; then export PLATFORM=${PLATFORM}.debug ; fi
    - echo "Build platform name is $PLATFORM"

install:
    - if [ "$CXX" == "g++" ]; then export CXX="g++-${WHICHGCC}" ; fi
    - export USE_CCACHE=1
    - export CCACHE_CPP2=1
    - if [ $TRAVIS_OS_NAME == osx ] ; then
          src/build-scripts/install_homebrew_deps.bash ;
      elif [ $TRAVIS_OS_NAME == linux ] ; then
          CXX="ccache $CXX" CCACHE_CPP2=1 src/build-scripts/build_openexr.bash ;
          export ILMBASE_HOME=$PWD/openexr-install ;
          export OPENEXR_HOME=$PWD/openexr-install ;
      fi
    - export OIIOMAKEFLAGS="$OIIOMAKEFLAGS -j2 DEBUG= USE_PYTHON=0 OIIO_BUILD_TESTS=0"
    - export OPENIMAGEIO_SITE=travis
    - export OSL_SITE=travis
    - src/build-scripts/build_openimageio.bash
    - export OPENIMAGEIOHOME=$PWD/OpenImageIO/dist/$OIIOPLATFORM
    - export DYLD_LIBRARY_PATH=$OPENIMAGEIOHOME/lib:$DYLD_LIBRARY_PATH
    - export LD_LIBRARY_PATH=$OPENIMAGEIOHOME/lib:$LD_LIBRARY_PATH
    - export PATH=$OPENIMAGEIOHOME/bin:$PATH
    - if [ $TRAVIS_OS_NAME == linux ] ; then
          export BUILD_FLAGS="$BUILD_FLAGS LLVM_STATIC=1" ;
          export TEST_FLAGS="-E broken\|render-cornell\|render-oren-nayar\|render-veachmis\|render-ward" ;
      fi
    # ^^^ Linux only, can't make these test work. Exclude for now and return later. ;

# before_script:

script:
    - make VERBOSE=1 $BUILD_FLAGS cmakesetup
    - make -j2 $BUILD_FLAGS
    - export OSLHOME=$PWD/dist/$PLATFORM
    - export DYLD_LIBRARY_PATH=$OSLHOME/lib:$DYLD_LIBRARY_PATH
    - export LD_LIBRARY_PATH=$OSLHOME/lib:$LD_LIBRARY_PATH
    - export OIIO_LIBRARY_PATH=$OSLHOME/lib:${OIIO_LIBRARY_PATH}
    - export PYTHONPATH=$OSLHOME/python:$OPENIMAGEIOHOME/python:$PYTHONPATH
    - make $BUILD_FLAGS test


after_success:
    - if [ "$CODECOV" == 1 ]; then bash <(curl -s https://codecov.io/bash) ; fi

after_failure:
# FIXME: find failed logs, stash them or send them to lg?

branches:
  only:
    - master
    - /RB-/
    - /lg-/

matrix:
    fast_finish: true
    include:
      # Build with C++11, optimized build, against OIIO 1.8
      - os: linux
        compiler: gcc
        env: USE_CPP11=1 USE_CPP=11 OIIOBRANCH=RB-1.8
      - os: osx
        compiler: clang
        env: USE_CPP11=1 USE_CPP=11 OIIOBRANCH=RB-1.8 LLVMBREWVER="@5"
      # Build with C++11, DEBUG build, against OIIO 1.8
      - os: linux
        compiler: gcc
        env: DEBUG=1 USE_CPP11=1 USE_CPP=11 OIIOBRANCH=RB-1.8
      #- os: osx
      #  compiler: clang
      #  env: DEBUG=1 USE_CPP11=1 USE_CPP=11
    # Test against OIIO 1.7
      - os: linux
        compiler: gcc
        env: USE_CPP11=1 USE_CPP=11 OIIOBRANCH=RB-1.7
      # Seems LLVM 3.4 has disappeared from Homebrew, so there's not an
      # easy way to test C++03 builds on OSX on TravisCI.
      #- os: osx
      #  compiler: clang
      #  env: OIIOBRANCH=release USE_CPP11=0 LLVMBREWVER=3.4
    # Linux only: test gcc 6 (catch new warnings hot off the presses) and
    # also use a higher SIMD level, avx and f16c, to make sure all is well.
    # TravisCI's OSX images don't yet support avx/f16c, so we only do this
    # on Linux for now, but eventually we'll want to separate these concerns
    # into separate tests. Also release branch of OIIO
      - os: linux
        compiler: gcc
        env: WHICHGCC=6 USE_SIMD=avx,f16c USE_CPP11=1 USE_CPP=11 OIIOBRANCH=release
    # One more, just for the heck of it, turn all SIMD off.  I guess this
    # should/could be both platforms, but in the interest of making the
    # tests go faster, don't bother doing it on OSX.
      - os: linux
        compiler: gcc
        env: USE_SIMD=0 USE_CPP11=1 USE_CPP=11 OIIOBRANCH=RB-1.8

notifications:
    email:
#        recipients:
#            - 
        on_success: change
        on_failure: always


# ER library
FIND_PATH(OPENSUBDIV_DIR REQUIRED)
find_library(OPENSUBDIV_LIB_OSDCPU REQUIRED)
find_library(GLFW_LIB REQUIRED)

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PATH (TBB_INCLUDE_DIR REQUIRED)
FIND_LIBRARY (TBB_LIBRARY REQUIRED)
FIND_PATH (OPENVDB_DIR REQUIRED)
FIND_LIBRARY (OPENVDB_LIBRARY REQUIRED)
FIND_PATH (SENSE4_INCLUDE_DIR REQUIRED)
FIND_LIBRARY (SENSE4_STATIC_LIB REQUIRED)
FIND_PATH (OPENSSL_INCLUDE_DIR REQUIRED)
FIND_LIBRARY (OPENSSL_STATIC_LIB REQUIRED)

INCLUDE_DIRECTORIES (${ELARA_SRC_DIR}/liber/include)
INCLUDE_DIRECTORIES (${ELARA_SRC_DIR}/liber)
INCLUDE_DIRECTORIES (${OPENSUBDIV_DIR})
INCLUDE_DIRECTORIES (${GLFW_DIR})
INCLUDE_DIRECTORIES (${OPENGL_INCLUDE_DIR})
INCLUDE_DIRECTORIES (${ZLIB_INCLUDE_DIR})
INCLUDE_DIRECTORIES (${TBB_INCLUDE_DIR})
INCLUDE_DIRECTORIES (${OPENVDB_DIR})
INCLUDE_DIRECTORIES (${SENSE4_INCLUDE_DIR})
INCLUDE_DIRECTORIES (${OPENSSL_INCLUDE_DIR})

FILE (GLOB h_src ${ELARA_SRC_DIR}/liber/*.h)
FILE (GLOB cpp_src ${ELARA_SRC_DIR}/liber/*.cpp)
FILE (GLOB include_src ${ELARA_SRC_DIR}/liber/include/*.h)

SOURCE_GROUP("SDK" FILES ${include_src})

ADD_LIBRARY (liber SHARED ${h_src} ${cpp_src} ${include_src})
SET_TARGET_PROPERTIES (liber PROPERTIES INTERFACE_LINK_LIBRARIES "")
ADD_DEFINITIONS (-DeiCORE_EXPORTS)
ADD_DEFINITIONS (-DOPENVDB_OPENEXR_STATICLIB)
ADD_DEFINITIONS (-DOPENVDB_STATICLIB)
ADD_DEFINITIONS (-D__TBB_NO_IMPLICIT_LINKAGE=1)

if (MSVC)
	set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
	set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
	# Enable PDB generation for Release build
	set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Zi")
	set (CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /DEBUG")

	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_api.cpp PROPERTIES COMPILE_FLAGS /GR)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_vdb_facade.cpp PROPERTIES COMPILE_FLAGS /GR)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_shader_osl.cpp PROPERTIES COMPILE_FLAGS /GR)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_shaderx.cpp PROPERTIES COMPILE_FLAGS /GR)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_volume_vdbdata.cpp PROPERTIES COMPILE_FLAGS /GR)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_volume_object.cpp PROPERTIES COMPILE_FLAGS /GR)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_renderer.cpp PROPERTIES COMPILE_FLAGS /GR)
else ()
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_api.cpp PROPERTIES COMPILE_FLAGS -frtti)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_vdb_facade.cpp PROPERTIES COMPILE_FLAGS -frtti)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_shader_osl.cpp PROPERTIES COMPILE_FLAGS -frtti)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_shaderx.cpp PROPERTIES COMPILE_FLAGS -frtti)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_volume_vdbdata.cpp PROPERTIES COMPILE_FLAGS -frtti)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_volume_object.cpp PROPERTIES COMPILE_FLAGS -frtti)
	set_source_files_properties (${ELARA_SRC_DIR}/liber/ei_renderer.cpp PROPERTIES COMPILE_FLAGS -frtti)
endif ()

TARGET_LINK_LIBRARIES (liber oslexec oslcomp oslquery ${OPENIMAGEIO_LIBRARY} ${Boost_LIBRARIES} ${CMAKE_DL_LIBS} ${OPENSUBDIV_LIB_OSDCPU} ${ZLIB_LIBRARY} ${GLFW_LIB} ${OPENGL_LIBRARIES} ${LLVM_LIBRARY} ${LLVM_MCJIT_LIBRARY} ${LLVM_LIBRARIES} ${LLVM_LDFLAGS} ${TBB_LIBRARY} ${OPENVDB_LIBRARY} ${SENSE4_STATIC_LIB} ${OPENSSL_STATIC_LIB})

if (MSVC)
	INSTALL (TARGETS liber RUNTIME DESTINATION bin)
	INSTALL (TARGETS liber LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
else ()
	INSTALL (TARGETS liber RUNTIME DESTINATION bin ARCHIVE DESTINATION lib LIBRARY DESTINATION lib COMPONENT library)
endif()
INSTALL (FILES ${include_src} DESTINATION include)
